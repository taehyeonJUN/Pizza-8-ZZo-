<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
<!-- 	<resources mapping="/resources/**" location="/resources/" /> -->
<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
<!-- 		하나의 요청에 포함된 최대 파일 크기(byte) 설정 가능 -->
		<beans:property name="maxUploadSize" value="10000000"></beans:property>
	</beans:bean>
	
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="hi.pizza.world" />
	
	<interceptors>
	
		<interceptor>
<!-- 		모든 경로에 대해서 kr.ac.kopo.comm.LoginInterceptor를 실행 -->
<!-- 		스프링에서 경로 지정시, *는 /를 제외한 모든 문자들을 의미 -->
<!-- 		**는/를 포함한 모든 문자들을 의미 -->
			<mapping path="/**"/> 
<!-- 			"/member/login.do", "//member/add.do" 경로에 대해서는 인터셉터를 실행하지 않도록 설정 -->
			<exclude-mapping path="/member/login.do"/>
			<exclude-mapping path="/member/add.do"/>
			<exclude-mapping path="/home.do"/>
			<beans:bean class="hi.pizza.world.comm.LoginInterceptor"></beans:bean>
			
		</interceptor>
		<interceptor>

			<mapping path="/member/list.do"/> 
<!-- 			"/member/login.do", "//member/add.do" 경로에 대해서는 인터셉터를 실행하지 않도록 설정 -->
	
			<beans:bean class="hi.pizza.world.comm.AdminInterceptor"></beans:bean>
			
		</interceptor>
	</interceptors>
	
	<!-- 	데이터베이스 연결을 담당하는 데이터소스로서 Common DBCP를 등록   -->
<!-- 	<beans:bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"> -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver"></beans:property>
<!-- 		error나면 oracle빼고 실행해보기 -->
		<beans:property name="url" value="jdbc:oracle:thin:@database-1.c7ma6y4ooqbt.us-east-2.rds.amazonaws.com:1521:orcl"></beans:property>
		<beans:property name="username" value="admin"></beans:property>
		<beans:property name="password" value="a123456789"></beans:property>
	</beans:bean>
	
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!-- 	마이바티스가 사용할 데이터베이스 연결(커넥션)을 제공하는 데이터소스 설정 -->
	<beans:property name="dataSource" ref="dataSource"></beans:property>
<!-- 	마이바티스 설정 파일 위치 -->
	<beans:property name="configLocation" value="classpath:/batis/mybatis-config.xml"></beans:property>
	</beans:bean>
	
	<mybatis-spring:scan base-package="hi.pizza.world" annotation="org.apache.ibatis.annotations.Mapper"/>
</beans:beans>
