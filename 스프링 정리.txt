스프링 개발 환경 구축
1. 자바(JDK)
2. 웹 서버(Tomcat)
3. 데이터베이스
4. 통합 개발환경(Eclipse)

프로젝트 기본 구조
1. /src/main/java -> java파일
2. /src/main/webapp -> jsp
3. /target -> 실행파일(class 및 빌드파일)
4. pom.xml
5.....


홈페이지의 동작 원리
사용자에게 프로그램이 홈페이지 요청을 받으면
1. 요청 확인, 이동, 처리 열심히 하고
2. 필요하면 데이터 베이스도 한번 다녀오고
3. 페이지 내용을 많이 많이 채워서 
다시 사용자에게 응답


스프링의 MVC -> 구분을 할 줄 알아야 한다

사용자가 요청한 페이지(View)와 데이터(Model), 이들 상호간 흐름을 제어(Control)하는 것을 각각 분리하여 재사용, 확장이 가능한 구조적 패턴

MVC
1. 사용자가 컨트롤러에 요청을 보낸다
2. 컨트롤러는 모델을 통해 사용자의 요청을 처리한다
3. 컨트롤러는 사용자에게 보여줄 뷰를 선택하고 사용자는 뷰를 보게 된다


웹 서버란?
요청(Request)과 응답(Response)을 해주는 프로그램

Maven : 프로젝트 관리 툴
Apache프로젝트
소스코드로부터 배포 가능한 산출물(artifact)을 빌드(build)하는 '빌드 툴'
자바소스를 컴파일 하고 패키지 해서 디플로이 하는 일을 자동으로 해주는 것

MyBatis: 데이터베이스를 쉽게 연결해주는 프로그램(JDBC보다 더 편함)

Annotation: 주석
스프링에서 클래스 메서드 같은 프로그램 요소에 다양한 종류의 정보를 전달 할 수 있는 방법
코드 감소, 유지보수, 생산성 증가
@RequestMapping : URL주소 a로 접근했을때 자바의 a메서드와 매핑
등등등

IoC / DI

